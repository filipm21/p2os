<?xml version="1.0"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:include filename="$(find p2os_urdf)/defs/pioneer3dx_wheel.xacro"/>
  <xacro:include filename="$(find p2os_urdf)/defs/inertia_calculation.xacro"/>

  <!-- Chassis description -->
  <link name="$(arg ns)/base_link">
	<!-- CHECK THESE VALUES. THEY MAY BE COMPLETELY WRONG. -->
	<inertial>
	  <mass value="13.0"/>
	  <origin xyz="-0.045 0 0.148"/>
	  <inertia ixx="0.3338" ixy="0.0" ixz="0.0"
			   iyy="0.4783" iyz="0.0"
			   izz="0.3338"/>
	</inertial>
	<!-- The base visual is fine. Just the inertial is questionable.-->
	<visual>
	  <origin xyz="-0.045 0 0.148" rpy="0 0 0"/>
	  <geometry name="pioneer_geom">
		<mesh filename="package://p2os_urdf/meshes/p3dx_meshes/chassis.stl"/>
	  </geometry>
	  <material name="ChassisRed">
		<color rgba="0.851 0.0 0.0 1.0"/>
	  </material>
	</visual>
	<collision>
	  <origin xyz="-0.045 0 0.148" rpy="0 0 0"/>
	  <geometry>
        <box size="0.4 0.28 0.17"/>
        <!-- This is the correct bounding box, but x=0.43 crashes Gazebo? -->
		<!--box size="0.43 0.28 0.17"/-->
	  </geometry>
	</collision>
  </link>
  <gazebo reference="$(arg ns)/base_link">
	<material value="Gazebo/Red"/>
  </gazebo>

  <link name="$(arg ns)/top_plate">
	<inertial>
	  <mass value="0.01"/>	
	  <origin xyz="0 0 0"/>
	  <inertia ixx="1" ixy="0" ixz="0"
			   iyy="1" iyz="0"
 			   izz="1"/>
	</inertial>
	<visual>
	  <origin xyz="0 0 0" rpy="0 0 0"/>
	  <geometry name="pioneer_geom">
		<mesh filename="package://p2os_urdf/meshes/p3dx_meshes/top.stl"/>
	  </geometry>
	  <material name="TopBlack">
		<color rgba="0.038 0.038 0.038 1.0"/>
	  </material>
	</visual>
  </link>
  <gazebo reference="$(arg ns)/top_plate">
	<material value="Gazebo/Black"/>
  </gazebo>

  <joint name="$(arg ns)/base_top_joint" type="fixed">
	<origin xyz="-0.045 0 0.24" rpy="0 0 0"/>
	<parent link="$(arg ns)/base_link"/>
	<child link="$(arg ns)/top_plate"/>
  </joint>

  <!-- Swivel -->
  <link name="$(arg ns)/swivel">
	<inertial>
	  <mass value="0.1"/>	
	  <origin xyz="0 0 0"/>
	  <inertia ixx="0.01" ixy="0" ixz="0"
			   iyy="0.01" iyz="0" izz="0.01"/>
  	</inertial>
	<visual>
	  <origin xyz="0 0 0" rpy="0 0 0"/>
	  <geometry name="pioneer_geom">
		<mesh filename="package://p2os_urdf/meshes/p3dx_meshes/swivel.stl"/>
	  </geometry>
	  <material name="swivel">
		<color rgba="0.5 0.5 0.5 1"/>
	  </material>
	</visual>
  </link>
  <gazebo reference="$(arg ns)/swivel">
	<material value="Gazebo/Black"/>
  </gazebo>

  <joint name="$(arg ns)/base_swivel_joint" type="continuous">
	<origin xyz="-0.185 0 0.055" rpy="0 0 0"/>
	<axis xyz="0 0 1"/>
    <limit effort="100" velocity="100" k_velocity="0" />
    <joint_properties damping="0.0" friction="0.0" />
	<parent link="$(arg ns)/base_link"/>
	<child link="$(arg ns)/swivel"/>
  </joint>

  <!-- Center Wheel + Hubcap -->
  <link name="$(arg ns)/center_hubcap">
    <inertial>
	  <mass value="0.01"/>	
	  <origin xyz="0 0 0"/>
	  <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983"
			   iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
  	</inertial>
	<visual>
	  <origin xyz="0 0 0" rpy="0 0 0"/>
	  <geometry name="pioneer_geom">
		<mesh filename="package://p2os_urdf/meshes/p3dx_meshes/center_hubcap.stl"/>
	  </geometry>
	  <material name="swivel">
		<color rgba="0.5 0.5 0.5 1"/>
	  </material>
	</visual>
  </link>
  <gazebo reference="$(arg ns)/center_hubcap">
	<material value="Gazebo/Black"/>
  </gazebo>

  <joint name="$(arg ns)/swivel_hubcap_joint" type="continuous">
	<origin xyz="-0.026 0 -0.016" rpy="0 0 0"/>
	<axis xyz="0 1 0"/>
	<anchor xyz="0 0 0"/>
    <limit effort="100" velocity="100" k_velocity="0" />
    <joint_properties damping="0.0" friction="0.0" />
	<parent link="$(arg ns)/swivel"/>
	<child link="$(arg ns)/center_wheel"/>
  </joint>

  <link name="$(arg ns)/center_wheel">
	<inertial>
	  <mass value="0.1"/>	
	  <origin xyz="0 0 0"/>
	  <inertia ixx="0.012411765597" ixy="-0.000711733678" ixz="0.00050272983"
			   iyy="0.015218160428" iyz="-0.000004273467" izz="0.011763977943"/>
  	</inertial>
	<visual>
	  <origin xyz="0 0 0" rpy="0 0 0"/>
	  <geometry name="pioneer_geom">
		<mesh filename="package://p2os_urdf/meshes/p3dx_meshes/center_wheel.stl"/>
	  </geometry>
	  <material name="WheelBlack">
		<color rgba="0.117 0.117 0.117 1"/>
	  </material>
	</visual>
	<collision>
	  <origin xyz="0 0 0" rpy="${-3.1415927/2.0} 0 0"/>
	  <geometry>
		<!--<mesh filename="package://p2os_urdf/meshes/p3dx_meshes/center_wheel.stl"/>-->
		<cylinder radius="0.0375" length="0.0314"/>
	  </geometry>
	</collision>
  </link>
  <gazebo reference="$(arg ns)/center_wheel">
	<material value="Gazebo/Black"/>
  </gazebo>

  <joint name="$(arg ns)/center_wheel_joint" type="fixed">
	<origin xyz="-0.0035 0 -0.001" rpy="0 0 0"/>
	<parent link="$(arg ns)/center_wheel"/>
	<child link="$(arg ns)/center_hubcap"/>
  </joint>

  <xacro:p3dx_wheel suffix="left" parent="$(arg ns)/base_link" reflect="1" namespace="$(arg ns)"/>
  <xacro:p3dx_wheel suffix="right" parent="$(arg ns)/base_link" reflect="-1" namespace="$(arg ns)"/>

  <!-- Front + Back Sonar -->
  <link name="$(arg ns)/front_sonar">
	<inertial>
	  <mass value="0.0001"/>	
	  <origin xyz="0 0 0"/>
	  <inertia ixx="1" ixy="0" ixz="0"
			   iyy="1" iyz="0" izz="1"/>
	</inertial>
	<visual>
	  <origin xyz="0 0 0" rpy="0 0 0"/>
	  <geometry name="pioneer_geom">
		<mesh filename="package://p2os_urdf/meshes/p3dx_meshes/front_sonar.stl"/>
	  </geometry>
	  <material name="SonarYellow">
		<color rgba="0.715 0.583 0.210 1.0"/>
	  </material>
	</visual>
  </link>
  <gazebo reference="$(arg ns)/front_sonar">
	<material value="Gazebo/Yellow"/>
  </gazebo>

  <joint name="$(arg ns)/base_front_joint" type="fixed">
	<origin xyz="-0.198 0 0.208" rpy="0 0 0"/>
	<parent link="$(arg ns)/base_link"/>
	<child link="$(arg ns)/front_sonar"/>
  </joint>

  <link name="$(arg ns)/back_sonar">
	<inertial>
	  <mass value="0.0001"/>	
	  <origin xyz="0 0 0"/>
	  <inertia ixx="1" ixy="0" ixz="0"
			   iyy="1" iyz="0" izz="1"/>
	</inertial>
	<visual>
	  <origin xyz="0 0 0" rpy="0 0 0"/>
	  <geometry name="pioneer_geom">
		<mesh filename="package://p2os_urdf/meshes/p3dx_meshes/back_sonar.stl"/>
	  </geometry>
	  <material name="SonarYellow">
		<color rgba="0.715 0.583 0.210 1.0"/>
	  </material>
	</visual>
  </link>

  <gazebo reference="$(arg ns)/back_sonar">
	<material value="Gazebo/Yellow"/>
  </gazebo>

  <joint name="$(arg ns)/base_back_joint" type="fixed">
	<origin xyz="0.109 0 0.209" rpy="0 0 0"/>
	<!-- <origin xyz="0 0 0" rpy="0 0 0"/> -->
	<parent link="$(arg ns)/base_link"/>
	<child link="$(arg ns)/back_sonar"/>
  </joint>
  
  <joint name="$(arg ns)/lift_joint" type="prismatic">
        <origin xyz="-0.05 0 0.35" rpy="0 0 0"/>
        <parent link="$(arg ns)/base_link"/>
        <child link="$(arg ns)/lift"/>
        <axis xyz="0 0 1"/>
        <limit lower="0" upper="0.5" velocity="0.5" effort="100"/> 
    </joint>
  
  <link name="$(arg ns)/lift">
        <visual>
            <origin xyz="0 0 -0.001" rpy="0 0 0"/>
            <geometry>
                <box size="0.2 0.2 0.02" />
            </geometry>
            <material name="SonarYellow">
				<color rgba="0.715 0.583 0.210 1.0"/>
	  		</material>
        </visual>
        <collision>
            <origin xyz="0 0 -0.001" rpy="0 0 0"/>
            <geometry>
                <box size="0.2 0.2 0.02" />
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.5" x="0.2" y="0.2" z="0.02">
            <origin xyz="0 0 -0.001" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>
    <gazebo reference="$(arg ns)/lift">
		<material value="Gazebo/Orange"/>
		<mu1 value="100"/>
		<mu2 value="100"/>
  	</gazebo>
  	
  	<gazebo>
  		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
			<robotNamespace>$(arg ns)</robotNamespace>
	  	</plugin>
	</gazebo>
	
	
	<transmission name="$(arg ns)/lift_transmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="$(arg ns)/lift_joint">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="$(arg ns)/motor1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>


  <gazebo>
    <!-- Robot locomotion plugin -->
	<plugin name="$(arg ns)/differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
	  <updateRate>100.0</updateRate>
	  <leftJoint>$(arg ns)/base_left_wheel_joint</leftJoint>
      <rightJoint>$(arg ns)/base_right_wheel_joint</rightJoint>
	  <wheelSeparation>0.32</wheelSeparation>
	  <wheelDiameter>0.18</wheelDiameter>
	  <wheelTorque>5</wheelTorque>
      <wheelAcceleration>0</wheelAcceleration>
      <!--<robotNamespace>$(arg ns)</robotNamespace>-->
	  <commandTopic>$(arg ns)/cmd_vel</commandTopic>
	  <odometryTopic>$(arg ns)/odom</odometryTopic>
      <odometrySource>ENCODER</odometrySource><!--Other option is World-->
	  <odometryFrame>$(arg ns)/odom</odometryFrame>
      <robotBaseFrame>$(arg ns)/base_link</robotBaseFrame>
      <publishTf>1</publishTf>
      <publishWheelTF>false</publishWheelTF>
      <publishWheelJointState>false</publishWheelJointState>
      <rosDebugLevel>Warn</rosDebugLevel>
	</plugin>

    <!-- Fake localization plugin -->
    <plugin name="$(arg ns)/ground_truth_odometry" filename="libgazebo_ros_p3d.so">
	  <alwaysOn>true</alwaysOn>
	  <updateRate>100.0</updateRate>
	  <bodyName>$(arg ns)/base_link</bodyName>
	  <topicName>$base_pose_ground_truth</topicName>
	  <gaussianNoise>0.01</gaussianNoise>
	  <frameName>map</frameName>-->
      <!-- initialize odometry for fake localization-->
	  <xyzOffsets>0 0 0</xyzOffsets>
	  <rpyOffsets>0 0 0</rpyOffsets>
	  <robotNamespace>$(arg ns)</robotNamespace>
	</plugin>

  </gazebo>

</robot>
